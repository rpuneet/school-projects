#include<allegro.h>
BITMAP *buffer;
double curx=20;
double tempx;
double dir[]={1,1};
double x=100,y=100,ball_tx,ball_ty;


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////  TILES  /////////////////////////////////////////////////////////////////////////////////////////////////
int tiles[][16]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                 0,3,1,1,1,1,1,1,1,1,1,1,1,1,3,0,
                 0,3,0,0,0,0,0,0,0,0,0,0,0,0,3,0,
                 0,3,0,0,0,0,0,0,0,0,0,0,0,0,3,0,
                 0,3,0,0,0,0,0,0,0,0,0,0,0,0,3,0,
                 0,3,0,0,0,0,0,0,0,0,0,0,0,0,3,0,
                 0,3,0,0,0,0,2,2,2,2,0,0,0,0,3,0,
                 0,3,0,0,0,0,0,0,0,0,0,0,0,0,3,0,   
                 0,3,0,0,0,0,0,0,0,0,0,0,0,0,3,0,
                 0,3,0,0,0,0,2,2,2,2,0,0,0,0,3,0,
                 0,3,0,0,0,0,0,0,0,0,0,0,0,0,3,0,
                 0,3,0,0,0,0,0,0,0,0,0,0,0,0,3,0,
                 0,3,0,0,0,0,0,0,0,0,0,0,0,0,3,0,
                 0,3,0,0,0,0,0,0,0,0,0,0,0,0,3,0,
                 0,3,1,1,1,1,1,1,1,1,1,1,1,1,3,0,
                 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,};

int i,j;
void make_tiles(){
	for(i=0;i<20;i++){
		for(j=0;j<16;j++)
		    if(tiles[i][j]==1){
		    	rectfill(buffer,(40*j),(12*i),(40*(j+1)),(12*(i+1)),makecol(0,255,255));
		        rect(buffer,(40*j),(12*i),(40*(j+1)),(12*(i+1)),makecol(0,0,0));}
		    else if(tiles[i][j]==2){
		    	rectfill(buffer,(40*j),(12*i),(40*(j+1)),(12*(i+1)),makecol(0,0,255));
		        rect(buffer,(40*j),(12*i),(40*(j+1)),(12*(i+1)),makecol(0,0,0));}
		    else if(tiles[i][j]==3){
		    	rectfill(buffer,(40*j),(12*i),(40*(j+1)),(12*(i+1)),makecol(0,255,0));
		        rect(buffer,(40*j),(12*i),(40*(j+1)),(12*(i+1)),makecol(0,0,0));}
		    else if(tiles[i][j]>3){
		    	rectfill(buffer,(40*j),(12*i),(40*(j+1)),(12*(i+1)),makecol(0,0,0));
		        rect(buffer,(40*j),(12*i),(40*(j+1)),(12*(i+1)),makecol(0,0,0));}
		        
			
	}
}


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////// COLLISION ///////////////////////////////////////////////////////////////////////

double lx,ly,rx,ry;
void collision(){
	for(i=0;i<20;i++){
		for(j=0;j<16;j++){
			if(tiles[i][j]>=1){
			    lx=40*j;
			    ly=12*i;
			    rx=40*(j+1);
			    ry=12*(i+1);
			
			    if((x-5>=lx && x-5<=rx)  || (x+5>=lx && x+5<=rx)){
				    if((y+7)==ry){
					    rectfill(buffer,(40*j),(12*i),(40*(j+1)),(12*(i+1)),makecol(255,255,255));
					    dir[0]=-1;
					    tiles[i][j]--;
					    
				    }
				    if((y-7)==ly){
					    rectfill(buffer,(40*j),(12*i),(40*(j+1)),(12*(i+1)),makecol(255,255,255));
					    dir[0]=1;
					    tiles[i][j]--;
					    
				    }
				if((y-5>=ly && y-5<=ry) || (y+5>=ly && y+5<=ry) ){
				    if((x+7)==lx){
					    rectfill(buffer,(40*j),(12*i),(40*(j+1)),(12*(i+1)),makecol(255,255,255));
					    dir[1]=(-1*dir[1]);
					    tiles[i][j]--;
					    
				    }
				    if((x-7)==rx){
					    rectfill(buffer,(40*j),(12*i),(40*(j+1)),(12*(i+1)),makecol(255,255,255));
					    dir[1]=(-1*dir[1]);
					    tiles[i][j]--;
					    
				    }
				}
			}
			
		}
	}
}
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////   START  /////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////  BALL  /////////////////////////////////////////////////////////////////
void rebound(){
	
	if(x<5) dir[1]+=(dir[1]*-2);
	if(x>635)  dir[1]-=(dir[1]*2);
	if (y<5)  dir[0]+=2;
	if (y>475) dir[0]-=2;
}
void move(){
	ball_tx=x;
	ball_ty=y;
	if(x<5 || y<5 || x>635 || y>475){
		rebound();
	}
	else if(x>curx-40 && x<curx+40 && y==460){
		dir[0]=-1;
		dir[1]=(x-curx)/30;
	}
	x+=dir[1];
	y+=dir[0];
	circlefill(buffer,ball_tx,ball_ty,5,makecol(255,255,255));
	circlefill(buffer,x,y,5,makecol(0,0,0));
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
int f;
int check_win(){
	f=1;
	for(i=0;i<20;i++){
		for(j=0;j<16;j++){
			if (tiles[i][j]!=0)
			    f=0;
		}
	}
	return f;
}

/////////////////////////////////////////////////////////////////// PLAYER 1 ///////////////////////////////////////////////////////////////////

void get_info(){
	tempx=curx;
	curx=mouse_x;
}

void pl1(){
	get_info();
	rectfill(buffer,tempx-40,465,tempx+40,475,makecol(255,255,255));
	rectfill(buffer,curx-40,465,curx+40,475,makecol(255,0,0));
}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

int strt=0,stx,sty;
void start(){
	while(!mouse_b & 1 && !key[KEY_ESC]){
		stx=curx;sty=460;
		pl1();
		circlefill(buffer,stx,sty,5,makecol(255,255,255));
	    circlefill(buffer,curx,sty,5,makecol(0,0,0));
		draw_sprite(screen,buffer,0,0);
	}
	x=curx;
	y=460;
	strt=1;
}

/******************************************************************************************************************************************************************
*******************************************************************  MAIN *****************************************************************************************
**************************************************************************************************************************************************************/
int main(){
	allegro_init();
	install_mouse();
	install_keyboard();
	set_color_depth(16);
	set_gfx_mode(GFX_AUTODETECT,640,480,0,0);
	
	buffer = create_bitmap(640,480);
	
	
	rectfill(buffer,0,0,640,480,makecol(255,255,255));
	draw_sprite(screen,buffer,0,0);
	
	make_tiles();
	
	
	
	while(!key[KEY_ESC]){
		if(strt==0 )start();
		clear_keybuf();
		pl1();
		move();
		if(y==475){
		   strt=0;
		   circlefill(buffer,x,y,5,makecol(255,255,255));
	}
		collision();
		make_tiles();
		draw_sprite(screen,buffer,0,0);
		if(check_win()==1){
			rest(1000);
			break;
		}
			
		}
	return 0;
}
END_OF_MAIN();

